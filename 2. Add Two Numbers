/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int d1 = 0;
        int d2 = 0;
        int carry = 0;
        ListNode* dummy = new ListNode(0);
        ListNode* curr = dummy;
     while(l1 != nullptr || l2 != nullptr){
        if(l1 == NULL && l2 != NULL){
            d1 = 0;
            d2 = l2 -> val;
            l2 = l2? l2 -> next : nullptr;
        }
        else if(l1 != NULL && l2 == NULL){
            d1 = l1 -> val;
            l1 = l1? l1 -> next : nullptr;
            d2 = 0;
        }
        else if(l1 == NULL && l2 == NULL){
            d1 = 0;
            d2 = 0;
            l1 = l1? l1 -> next : nullptr;
            l2 = l2? l2 -> next : nullptr;
        }
        else{
            d1 = l1 -> val;
            d2 = l2 -> val;
            l1 = l1? l1 -> next : nullptr;
            l2 = l2? l2 -> next : nullptr;
        }
        int sum = d1 + d2 + carry;
        carry = sum/10;
        curr -> next = new ListNode(sum%10);
        curr = curr -> next;
        if(sum >= 10 && l1 == NULL && l2 == NULL){
            curr -> next = new ListNode(1);
        }
     }
     ListNode* output = dummy -> next;
     delete dummy;
     return output;
    }
};
